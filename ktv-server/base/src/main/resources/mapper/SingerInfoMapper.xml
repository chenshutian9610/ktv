<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.tree.ktv.mapper.SingerInfoMapper">
  <resultMap id="BaseResultMap" type="org.tree.ktv.model.SingerInfo">
    <id column="singer_id" jdbcType="BIGINT" property="singerId" />
    <result column="singer_name" jdbcType="VARCHAR" property="singerName" />
    <result column="singer_sex" jdbcType="TINYINT" property="singerSex" />
    <result column="singer_nationality" jdbcType="VARCHAR" property="singerNationality" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    singer_id, singer_name, singer_sex, singer_nationality
  </sql>
  <select id="selectByExample" parameterType="org.tree.ktv.model.SingerInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from singer_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from singer_info
    where singer_id = #{singerId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from singer_info
    where singer_id = #{singerId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.tree.ktv.model.SingerInfoExample">
    delete from singer_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.tree.ktv.model.SingerInfo">
    insert into singer_info (singer_id, singer_name, singer_sex, 
      singer_nationality)
    values (#{singerId,jdbcType=BIGINT}, #{singerName,jdbcType=VARCHAR}, #{singerSex,jdbcType=TINYINT}, 
      #{singerNationality,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.tree.ktv.model.SingerInfo">
    insert into singer_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="singerId != null">
        singer_id,
      </if>
      <if test="singerName != null">
        singer_name,
      </if>
      <if test="singerSex != null">
        singer_sex,
      </if>
      <if test="singerNationality != null">
        singer_nationality,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="singerId != null">
        #{singerId,jdbcType=BIGINT},
      </if>
      <if test="singerName != null">
        #{singerName,jdbcType=VARCHAR},
      </if>
      <if test="singerSex != null">
        #{singerSex,jdbcType=TINYINT},
      </if>
      <if test="singerNationality != null">
        #{singerNationality,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.tree.ktv.model.SingerInfoExample" resultType="java.lang.Long">
    select count(*) from singer_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update singer_info
    <set>
      <if test="record.singerId != null">
        singer_id = #{record.singerId,jdbcType=BIGINT},
      </if>
      <if test="record.singerName != null">
        singer_name = #{record.singerName,jdbcType=VARCHAR},
      </if>
      <if test="record.singerSex != null">
        singer_sex = #{record.singerSex,jdbcType=TINYINT},
      </if>
      <if test="record.singerNationality != null">
        singer_nationality = #{record.singerNationality,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update singer_info
    set singer_id = #{record.singerId,jdbcType=BIGINT},
      singer_name = #{record.singerName,jdbcType=VARCHAR},
      singer_sex = #{record.singerSex,jdbcType=TINYINT},
      singer_nationality = #{record.singerNationality,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.tree.ktv.model.SingerInfo">
    update singer_info
    <set>
      <if test="singerName != null">
        singer_name = #{singerName,jdbcType=VARCHAR},
      </if>
      <if test="singerSex != null">
        singer_sex = #{singerSex,jdbcType=TINYINT},
      </if>
      <if test="singerNationality != null">
        singer_nationality = #{singerNationality,jdbcType=VARCHAR},
      </if>
    </set>
    where singer_id = #{singerId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.tree.ktv.model.SingerInfo">
    update singer_info
    set singer_name = #{singerName,jdbcType=VARCHAR},
      singer_sex = #{singerSex,jdbcType=TINYINT},
      singer_nationality = #{singerNationality,jdbcType=VARCHAR}
    where singer_id = #{singerId,jdbcType=BIGINT}
  </update>
  <select id="querySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    ${args} from singer_info
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <insert id="insertSelectiveWithGeneratedKey" keyProperty="singerId" parameterType="org.tree.ktv.model.SingerInfo" useGeneratedKeys="true">
    insert into singer_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="singerId != null">
        singer_id,
      </if>
      <if test="singerName != null">
        singer_name,
      </if>
      <if test="singerSex != null">
        singer_sex,
      </if>
      <if test="singerNationality != null">
        singer_nationality,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="singerId != null">
        #{singerId,jdbcType=BIGINT},
      </if>
      <if test="singerName != null">
        #{singerName,jdbcType=VARCHAR},
      </if>
      <if test="singerSex != null">
        #{singerSex,jdbcType=TINYINT},
      </if>
      <if test="singerNationality != null">
        #{singerNationality,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    insert into singer_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="list[0].singerId!=null">
        singer_id,
      </if>
      <if test="list[0].singerName!=null">
        singer_name,
      </if>
      <if test="list[0].singerSex!=null">
        singer_sex,
      </if>
      <if test="list[0].singerNationality!=null">
        singer_nationality,
      </if>
    </trim>
     values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix=" (" suffix=")" suffixOverrides=",">
        <if test="item.singerId!=null">
          #{item.singerId,jdbcType=BIGINT},
        </if>
        <if test="item.singerName!=null">
          #{item.singerName,jdbcType=VARCHAR},
        </if>
        <if test="item.singerSex!=null">
          #{item.singerSex,jdbcType=TINYINT},
        </if>
        <if test="item.singerNationality!=null">
          #{item.singerNationality,jdbcType=VARCHAR},
        </if>
      </trim>
    </foreach>
  </insert>
</mapper>