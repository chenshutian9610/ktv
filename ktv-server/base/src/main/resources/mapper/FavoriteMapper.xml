<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.tree.ktv.mapper.FavoriteMapper">
  <resultMap id="BaseResultMap" type="org.tree.ktv.model.Favorite">
    <result column="user_id" jdbcType="BIGINT" property="userId" />
    <result column="song_id" jdbcType="BIGINT" property="songId" />
    <result column="generation" jdbcType="INTEGER" property="generation" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_id, song_id, generation
  </sql>
  <select id="selectByExample" parameterType="org.tree.ktv.model.FavoriteExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from favorite
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="org.tree.ktv.model.FavoriteExample">
    delete from favorite
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.tree.ktv.model.Favorite">
    insert into favorite (user_id, song_id, generation
      )
    values (#{userId,jdbcType=BIGINT}, #{songId,jdbcType=BIGINT}, #{generation,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="org.tree.ktv.model.Favorite">
    insert into favorite
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        user_id,
      </if>
      <if test="songId != null">
        song_id,
      </if>
      <if test="generation != null">
        generation,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="songId != null">
        #{songId,jdbcType=BIGINT},
      </if>
      <if test="generation != null">
        #{generation,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.tree.ktv.model.FavoriteExample" resultType="java.lang.Long">
    select count(*) from favorite
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update favorite
    <set>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.songId != null">
        song_id = #{record.songId,jdbcType=BIGINT},
      </if>
      <if test="record.generation != null">
        generation = #{record.generation,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update favorite
    set user_id = #{record.userId,jdbcType=BIGINT},
      song_id = #{record.songId,jdbcType=BIGINT},
      generation = #{record.generation,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <select id="querySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    ${args} from favorite
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    insert into favorite
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="list[0].userId!=null">
        user_id,
      </if>
      <if test="list[0].songId!=null">
        song_id,
      </if>
      <if test="list[0].generation!=null">
        generation,
      </if>
    </trim>
     values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix=" (" suffix=")" suffixOverrides=",">
        <if test="item.userId!=null">
          #{item.userId,jdbcType=BIGINT},
        </if>
        <if test="item.songId!=null">
          #{item.songId,jdbcType=BIGINT},
        </if>
        <if test="item.generation!=null">
          #{item.generation,jdbcType=INTEGER},
        </if>
      </trim>
    </foreach>
  </insert>
</mapper>