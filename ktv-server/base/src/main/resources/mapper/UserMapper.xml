<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.tree.ktv.mapper.UserMapper">
  <resultMap id="BaseResultMap" type="org.tree.ktv.model.User">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="user_sex" jdbcType="TINYINT" property="userSex" />
    <result column="birthday" jdbcType="TIMESTAMP" property="birthday" />
    <result column="register_date" jdbcType="TIMESTAMP" property="registerDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, username, real_name, password, user_sex, birthday, register_date
  </sql>
  <select id="selectByExample" parameterType="org.tree.ktv.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="org.tree.ktv.model.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.tree.ktv.model.User">
    insert into user (id, username, real_name, 
      password, user_sex, birthday, 
      register_date)
    values (#{id,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{userSex,jdbcType=TINYINT}, #{birthday,jdbcType=TIMESTAMP}, 
      #{registerDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="org.tree.ktv.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="userSex != null">
        user_sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="registerDate != null">
        register_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        #{userSex,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="registerDate != null">
        #{registerDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.tree.ktv.model.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.userSex != null">
        user_sex = #{record.userSex,jdbcType=TINYINT},
      </if>
      <if test="record.birthday != null">
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.registerDate != null">
        register_date = #{record.registerDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set id = #{record.id,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      real_name = #{record.realName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      user_sex = #{record.userSex,jdbcType=TINYINT},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      register_date = #{record.registerDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.tree.ktv.model.User">
    update user
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        user_sex = #{userSex,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="registerDate != null">
        register_date = #{registerDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.tree.ktv.model.User">
    update user
    set username = #{username,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      user_sex = #{userSex,jdbcType=TINYINT},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      register_date = #{registerDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <select id="querySelective" parameterType="map" resultMap="BaseResultMap">
    select
    <if test="example.distinct">
      distinct
    </if>
    ${args} from user
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <insert id="insertSelectiveWithGeneratedKey" keyProperty="id" parameterType="org.tree.ktv.model.User" useGeneratedKeys="true">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="userSex != null">
        user_sex,
      </if>
      <if test="birthday != null">
        birthday,
      </if>
      <if test="registerDate != null">
        register_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="userSex != null">
        #{userSex,jdbcType=TINYINT},
      </if>
      <if test="birthday != null">
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="registerDate != null">
        #{registerDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <insert id="insertBatchSelective" parameterType="java.util.List">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="list[0].id!=null">
        id,
      </if>
      <if test="list[0].username!=null">
        username,
      </if>
      <if test="list[0].realName!=null">
        real_name,
      </if>
      <if test="list[0].password!=null">
        password,
      </if>
      <if test="list[0].userSex!=null">
        user_sex,
      </if>
      <if test="list[0].birthday!=null">
        birthday,
      </if>
      <if test="list[0].registerDate!=null">
        register_date,
      </if>
    </trim>
     values 
    <foreach collection="list" index="index" item="item" separator=",">
      <trim prefix=" (" suffix=")" suffixOverrides=",">
        <if test="item.id!=null">
          #{item.id,jdbcType=BIGINT},
        </if>
        <if test="item.username!=null">
          #{item.username,jdbcType=VARCHAR},
        </if>
        <if test="item.realName!=null">
          #{item.realName,jdbcType=VARCHAR},
        </if>
        <if test="item.password!=null">
          #{item.password,jdbcType=VARCHAR},
        </if>
        <if test="item.userSex!=null">
          #{item.userSex,jdbcType=TINYINT},
        </if>
        <if test="item.birthday!=null">
          #{item.birthday,jdbcType=TIMESTAMP},
        </if>
        <if test="item.registerDate!=null">
          #{item.registerDate,jdbcType=TIMESTAMP},
        </if>
      </trim>
    </foreach>
  </insert>
</mapper>